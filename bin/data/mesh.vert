#version 410

// layout 을 이용해서 버텍스 셰이더에서 각 버텍스 데이터가 저장된 순서를 알려줌. (오픈프레임웍스가 버텍스 데이터를 저장하는 순서는 p.74 참고)
layout(location = 0) in vec3 pos;
layout(location = 1) in vec4 tan; // 원래 오픈프레임웍스에서 1번 로케이션은 버텍스 컬러가 들어오는 위치지만, 탄젠트 벡터 지원이 안되서 임시로 여기다 탄젠트 벡터 데이터를 추가해서 쓸거임.
layout(location = 2) in vec3 nrm;
layout(location = 3) in vec2 uv;

uniform mat4 mvp; // c++ (오픈프레임웍스)에서 합쳐준 투영 * 뷰 * 모델 행렬을 전달받는 유니폼 변수
uniform mat4 model; // 각 버텍스의 월드좌표를 구하기 위해 mvp 행렬과 별도로 전달받는 모델행렬을 저장할 유니폼 변수
uniform mat3 normalMatrix; // 조명계산에 필요한 노멀벡터(즉, 월드공간으로 변환된 노멀벡터)를 계산하려면, 노말행렬을 따로 구해서 버텍스 셰이더에 가져옴.

out vec3 fragNrm; // 프래그먼트 셰이더로 전송할 shield 모델의 노멀벡터
out vec3 fragWorldPos; // 각 버텍스 셰이더의 월드좌표를 구한 뒤 보간해서 프래그먼트 셰이더로 내보낼 때 사용할 out 변수
out vec2 fragUV; // 프래그먼트 셰이더에서 라이팅 계산 시 텍스쳐를 사용할거기 때문에, 텍스쳐 샘플링에 필요한 uv 데이터도 보간해서 넘겨줄거임
out mat3 TBN; // 프래그먼트 셰이더에서 구한 탄젠트 공간의 노멀벡터(노말맵에서 샘플링한 벡터)를 월드공간의 노멀벡터로 변환하기 위한 행렬. 보통 TBN 행렬이라고 부름.

void main() {
  fragNrm = (normalMatrix * nrm).xyz; // 노말행렬과 오브젝트공간 기준의 노말벡터를 구해서 월드공간으로 변환된 노말벡터를 구하고, 보간해서 프래그먼트 셰이더로 넘김.
  fragWorldPos = (model * vec4(pos, 1.0)).xyz; // 버텍스 좌표를 동차좌표로 변환해서 모델행렬과 곱함으로써 월드좌표로 변환하고, vec4값의 xyz만 swizzle 하여 프래그먼트 셰이더로 보간해서 내보냄.
  fragUV = vec2(uv.x, 1.0 - uv.y); // 이미지 파일들은 상단부터 이미지 데이터를 저장하지만, OpenGL 은 uv좌표계와 동일하게 좌하단부터 (0, 0)으로 시작되므로, y좌표값만 뒤집어준 것.

  // TBN 행렬 계산 및 프래그먼트로 보간
  vec3 T = normalize(normalMatrix * tan.xyz); // 탄젠트 벡터를 노말행렬과 곱해 월드공간으로 변환함 (.xyz로 swizzle 한 이유는, vec4 타입의 버텍스 색상 데이터로 가져왔기 때문)
  vec3 B = normalize(normalMatrix * cross(tan.xyz, nrm.xyz)); // 바이탄젠트 벡터(탄젠트 벡터와 노말벡터의 외적)을 노말행렬과 곱해 월드공간으로 변환함.
  vec3 N = normalize(normalMatrix * nrm.xyz); // 노말벡터를 노말행렬과 곱해 월드공간으로 변환함
  TBN = mat3(T, B, N); // 위에 계산한 세 벡터(모두 변환 후 길이는 1로 정규화된 상태)를 3*3 행렬로 묶어 TBN 행렬로 만든 뒤, 프래그먼트 셰이더로 보간하여 전송 
  // 행렬로 세 벡터를 묶을 때에는, 인자로 넣어주는 벡터의 순서가 매우 중요하다고 함. 꼭 T, B, N 순서로 넣어줄 것!

  gl_Position = mvp * vec4(pos, 1.0); // 동차좌표계로 변환한 버텍스 위치좌표에 mvp 행렬을 곱해서 변환을 처리한 뒤, 최종 버텍스 위치값을 결정함.
}

/*
  탄젠트 벡터

  참고로, c++ 에서 저장한 탄젠트 벡터는
  오브젝트 공간을 기준으로 계산되었던 것이라고 함. (탄젠트 벡터 만드는 공식이 너무 어려움...ㅠ)

  따라서, 탄젠트 벡터도 월드공간으로 변환해야 하고,
  오브젝트 공간의 탄젠트벡터와 노말벡터를 외적해서 얻은 바이탄젠트 벡터도 월드공간으로 변환해야 한다고 함.
*/